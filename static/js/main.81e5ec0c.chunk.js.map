{"version":3,"sources":["Compoments/cam.png","Compoments/pc.png","Compoments/phone.png","Compoments/airpods.png","Compoments/PostItem.js","Compoments/Cart.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","PostItem","props","state","className","this","name","price","src","pic","alt","onClick","test","index","Component","Cart","count","style","maxWidth","App","num","products","map","element","i","setState","cart","total","q","reduce","s","r","Object","keys","key","id","y","e","console","log","test2","totalPaid","buy","flag","divtest","show","Pc","Pods","Cam","Phone","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.81e5ec0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cam.69764619.png\";","module.exports = __webpack_public_path__ + \"static/media/pc.9fa2669f.png\";","module.exports = __webpack_public_path__ + \"static/media/phone.b8e6ada8.png\";","module.exports = __webpack_public_path__ + \"static/media/airpods.8be21d15.png\";","import React, { Component } from 'react'\r\n\r\nexport default class PostItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            \r\n        }\r\n        \r\n       \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <div className=\"shopBox\">\r\n          \r\n                       <h3>{this.props.name} </h3>\r\n                       <h5>price: {this.props.price} $$ </h5>\r\n                            \r\n                            <img src={this.props.pic} alt=\"Logo\" />\r\n                            <br></br>\r\n                       \r\n                        <button onClick={()=> { this.props.test(this.props.index);}}>Add to cart </button>\r\n                                 {/* button that sets 2 funcs */}\r\n                   \r\n            </div>\r\n        )\r\n    }\r\n}\r\n//{this.props.test ,this.click }","\r\n\r\n\r\nimport React, { Component } from 'react'\r\n\r\nexport default class Cart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n             \r\n        }\r\n       \r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shopBox\" >\r\n                  <h3>{this.props.name}</h3><h4>quantity: {this.props.count} </h4><h5>price: {this.props.price} $$</h5>\r\n                  <img style={{maxWidth: \"80px\"}} src={this.props.pic} alt=\"Logo\" />\r\n                  <h6>total - {this.props.count*this.props.price}</h6>\r\n                  \r\n                  \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","\nimport './App.css';\nimport PostItem from './Compoments/PostItem'\nimport React, { Component } from 'react'\nimport Cart from'./Compoments/Cart'\nimport Cam  from './Compoments/cam.png'\nimport Pc from './Compoments/pc.png'\nimport Phone from './Compoments/phone.png'\nimport Pods from './Compoments/airpods.png'\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n     this.state = {\n      products:[{name:'PC',price:1000,index:0,pic:Pc,count:1},\n                 {name:'air-pods',price:450,index:1,pic:Pods,count:1},\n                  {name:'camera',price:250,index:2,pic:Cam,count:1},\n                   {name:'phone',price:200,index:3,pic:Phone,count:1},\n                   ],\n    flag:0,\n    cart:[],\n    buy:[],\n    totalPaid:[],\n    test:[]\n    }\n  }\n\n  \n  test=(num)=>{\n   \n    this.state.products.map((element,i)=>{\n      if(element.index===num){\n        // console.log(element);\n        \n        this.setState({cart:[element,...this.state.cart]})\n      }\n       })\n       this.setState({test:num})\n\n  };\n\n  cart=()=>{\n    ////dff\n   \n      \n      \n  };\n  total=()=>{\n    const q = this.state.cart.reduce((s, { index }) => (s[index] = (s[index] || 0) + 1, s), {});\n    const r = Object.keys(q).map((key) => ({ id: key, count: q[key],total:q[key]*this.state.products[key].price ,name:this.state.products[key].name,pic:this.state.products[key].pic }));\n    \n    var y=0;\n    // this.setState({buy:r,totalPaid:y}) \n r.map((e)=>{\n  y+=(this.state.products[e.id].price * e.count);\n\n })\n//  this.setState({totalPaid:y})\n  console.log(y);\n return y;\n    \n    \n    \n  };\n\n  test2=(num)=>{\n    this.setState({totalPaid:num});\n    \n  }\n  \n\n\n  buy=()=>{\n    \n    const q = this.state.cart.reduce((s, { index }) => (s[index] = (s[index] || 0) + 1, s), {});\n    const r = Object.keys(q).map((key) => ({ id: key, count: q[key],total:q[key]*this.state.products[key].price ,name:this.state.products[key].name,pic:this.state.products[key].pic }));\n    \n    var y=0;\n    this.setState({cart:[],flag:0})\n    this.setState({buy:r}) ;\n this.state.buy.map((e)=>{\n  y+=(this.state.products[e.id].price * e.count);\n\n })\n this.setState({totalPaid:y})\n  // console.log(y);\n   this.test2(y);\n  };\n\n  divtest=()=>{\n\n    const q = this.state.cart.reduce((s, { index }) => (s[index] = (s[index] || 0) + 1, s), {});\n    // console.log(q);\n  \n    const r = Object.keys(q).map((key) => ({ id: key, count: q[key],total:q[key]*this.state.products[key].price,price:this.state.products[key].price ,name:this.state.products[key].name,pic:this.state.products[key].pic }));\n\n    \n    return (\n    <div>{r.map((element)=>{\n          \n      return (<Cart index={element.index} count={element.count} name={element.name} price={element.price} pic={element.pic}/>\n         )\n    })\n      }</div>\n    )\n  }\n\n  show = () =>{\n    if(this.state.flag === 1){\n      return (\n        <div >\n           {this.cart()}\n            {this.divtest()}\n              <h4>total is: {this.total()} $$</h4>\n            <br></br>\n            <button onClick={()=>{this.buy();this.test2(this.total())}}>BUY</button>  \n        </div>\n      )\n    }\n    else{\n      return (\n        <div>\n          {this.state.products.map((element,i)=>{\n            \n            \n           return <PostItem name={element.name} price={element.price} pic={element.pic} index={i} test={this.test} buy={this.buy}/>\n         })} \n          \n        </div>\n      )\n    }\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n      <h1> Welcome !</h1><br></br>\n       \n        <button onClick={()=>{this.setState({flag:0})}}>Home</button>\n        <button onClick={()=>{this.setState({flag:1})}}>Cart</button>\n        <button onClick={()=>{this.buy();this.test2(this.total())}}>BUY</button>  \n         <br></br>\n\n        \n         {this.show()}\n        <h6> by:Mhran ebraheem</h6>\n      </div>\n    )\n  }\n}\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}